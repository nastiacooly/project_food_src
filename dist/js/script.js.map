{"version":3,"sources":["webpack://food/./src/js/modules/calc.js","webpack://food/./src/js/modules/cards.js","webpack://food/./src/js/modules/forms.js","webpack://food/./src/js/modules/modal.js","webpack://food/./src/js/modules/slider.js","webpack://food/./src/js/modules/tabs.js","webpack://food/./src/js/modules/timer.js","webpack://food/./src/js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./src/js/main.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD,qBAAqB;AACtE;AACA;;AAEA;AACA,6DAA6D,oBAAoB;AACjF;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;;AC9HiC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB;AAClB;;AAEA,4CAA4C;AAC5C;AACA;AACA;AACA,aAAa;AACb,4F;AACA;AACA;;AAEA;AACA,+BAA+B,SAAS,OAAO,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA,gDAAgD;AAChD;AACA;;AAEA,IAAI,kEAAW;AACf;AACA,uBAAuB,iCAAiC,MAAM;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,SAAS,EAAE;AACX,KAAK;;AAEL;AACA;AACA,4BAA4B,iCAAiC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK,EAAE;AACP;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;AC5EuB;AACM;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA,KAAK;;AAEL;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;;AAElE,gDAAgD;AAChD,gFAAgF;;AAEhF,YAAY,+DAAQ;AACpB,2BAA2B;AAC3B,kCAAkC;AAClC;AACA,gBAAgB,0DAAe;AAC/B,aAAa;AACb,0BAA0B;AAC1B,gBAAgB,0DAAe;AAC/B,aAAa;AACb,4BAA4B;AAC5B,6BAA6B;AAC7B,aAAa;;AAEb,SAAS;AACT;AACA;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;;ACpDpB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,KAAK;AACL,0CAA0C;AAC1C;;AAEA;AACA,kCAAkC;AAClC;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,oCAAoC,QAAQ;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,QAAQ;AACb;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,mF;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sEAAsE;AACtE;AACA;AACA,KAAK;;AAEL,qCAAqC;AACrC;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA;AACA;;;AAGA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;ACtFrB,iBAAiB,mFAAmF;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mCAAmC;AACnC;AACA;;AAEA,kDAAkD;;AAElD;AACA;AACA,6CAA6C,cAAc;AAC3D,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,+CAA+C,WAAW;AAC1D,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,qDAAqD,YAAY;;AAEjE;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,qDAAqD,YAAY;;AAEjE;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA,yDAAyD,YAAY;;AAErE;;AAEA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;;AAEA;;AAEA;AACA,4CAA4C,cAAc;AAC1D,KAAK;AACL;AACA;;AAEA;;AAEA;AACA,2BAA2B;AAC3B;;AAEA;AACA,uCAAuC;AACvC;;AAEA;AACA;AACA;;AAEA,iCAAiC;AACjC,gDAAgD,WAAW;AAC3D,SAAS;AACT,+CAA+C,WAAW;AAC1D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK,EAAE;AACP;;AAEA,iEAAe,MAAM,E;;;;;;;;;;;;;;AChLrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,iEAAe,IAAI,E;;;;;;;;;;;;;;AC3CnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iEAAe,KAAK,E;;;;;;;;;;;;;;;ACjEpB,uCAAuC;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL,+BAA+B;AAC/B;;;AAGA,oCAAoC;AACpC,oCAAoC;;AAEpC,oBAAoB;AACpB,wDAAwD,IAAI,YAAY,cAAc;AACtF;;AAEA,+BAA+B;AAC/B;;;;;;;;UCrBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;;;;ACNa;;AAEb;AACqC;AACA;AACE;AACA;AACA;AACQ;AACN;AACF;;;AAGvC;AACA;AACA,wCAAwC,8DAAW,mBAAmB;;AAEtE;AACA,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,0DAAK;AACT,CAAC,E","file":"script.js","sourcesContent":["function calc() {\r\n    //variables\r\n    const calcResult = document.querySelector('.calculating__result span');\r\n\r\n    // Calculator\r\n    let sex, height, weight, age, ratio, formula;\r\n    let previousGenderChoice = localStorage.getItem('gender');\r\n    let previousRatioChoice = localStorage.getItem('ratio');\r\n\r\n    if (previousGenderChoice) {\r\n        sex = previousGenderChoice;\r\n    }\r\n\r\n    if (previousRatioChoice) {\r\n        ratio = previousRatioChoice;\r\n    }\r\n\r\n    function highlightStoredInputs(parentSelector, activeClass) {\r\n        const parent = document.querySelector(parentSelector);\r\n        // adding active class for inputs stored in local storage\r\n        if (previousGenderChoice && parentSelector === \"#gender\") {\r\n            let input = parent.querySelector(`#${previousGenderChoice}`);\r\n            input.classList.add(activeClass);\r\n        }\r\n\r\n        if (previousRatioChoice && parentSelector === \"#activity\") {\r\n            let input = parent.querySelector(`[data-ratio=\"${previousRatioChoice}\"]`);\r\n            input.classList.add(activeClass);\r\n        }\r\n    }\r\n\r\n    highlightStoredInputs('#gender', 'calculating__choose-item_active');\r\n    highlightStoredInputs('#activity', 'calculating__choose-item_active');\r\n\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            // if user did not fill any of the required inputs, calculation cannot be performed\r\n            calcResult.textContent = \"____\";\r\n            return;\r\n        }\r\n\r\n        if (sex === \"female\") {\r\n            formula = 447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age);\r\n        } else if (sex === \"male\") {\r\n            formula = 88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age);\r\n        }\r\n\r\n        // calculating result and rendering to DOM\r\n        calcResult.textContent = Math.ceil((formula) * ratio);\r\n    }\r\n\r\n    calcTotal();\r\n\r\n\r\n    function getStaticInputsData(parentSelector, activeClass) {\r\n        const parent = document.querySelector(parentSelector);\r\n        const staticInputs = parent.querySelectorAll('div');\r\n        \r\n        parent.addEventListener('click', (e) => {\r\n            if (e.target === parent) {\r\n                // clicking on a parent should not do anything\r\n                return;\r\n            }\r\n            \r\n            if (e.target.dataset.ratio) {\r\n                // for inputs with activity ratio\r\n                ratio = +e.target.dataset.ratio;\r\n                localStorage.setItem('ratio', ratio);\r\n            } else {\r\n                // for inputs with female/male choice\r\n                sex = e.target.id;\r\n                localStorage.setItem('gender', sex);\r\n            }\r\n\r\n            // removing active class from all static inputs except the clicked one\r\n            staticInputs.forEach(input => {\r\n                input.classList.remove(activeClass);\r\n            });\r\n            e.target.classList.add(activeClass);\r\n\r\n            calcTotal();\r\n        });\r\n\r\n    }\r\n\r\n    getStaticInputsData('#gender', 'calculating__choose-item_active');\r\n    getStaticInputsData('#activity', 'calculating__choose-item_active');\r\n\r\n\r\n    function getDynamicInputsData(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n            // highlighting input in red in case of non-digit input, otherwise - in green\r\n            if (input.value.match(/\\D/g)) {\r\n                input.classList.add('calculating__choose-item_highlighted-error');\r\n                input.classList.remove('calculating__choose-item_highlighted-success');\r\n            } else {\r\n                input.classList.remove('calculating__choose-item_highlighted-error');\r\n                input.classList.add('calculating__choose-item_highlighted-success');\r\n            }\r\n            \r\n            // getting user input\r\n            switch(input.id) {\r\n                case 'height': \r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight': \r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age': \r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInputsData(\"#height\");\r\n    getDynamicInputsData(\"#weight\");\r\n    getDynamicInputsData(\"#age\");\r\n    // end of calculator\r\n}\r\n\r\nexport default calc;","import {getResource} from '../services/services.js';\r\n\r\nfunction cards() {\r\n    //Class for menu items and rendering with GET-requests\r\n    class MenuItem {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes; //через Rest-оператор, чтобы в будущем передавать неограниченное число классов\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 74;\r\n            this.changeToRUB();\r\n        }\r\n\r\n        changeToRUB() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() { //метод для создания верстки экземпляра класса\r\n            const menuItemElement = document.createElement('div');\r\n\r\n            if (this.classes.length === 0) { //this.classes=[] (из-за Rest-оператора), если ничего не передано\r\n                this.classes = 'menu__item';\r\n                menuItemElement.classList.add(this.classes);\r\n                //добавляем CSS-класс по умолчанию, если через JS-класс они не будут переданы\r\n            } else {\r\n                this.classes.forEach(className => menuItemElement.classList.add(className)); \r\n                //добавляем переданные через JS-класс CSS-классы элементу\r\n            }\r\n            \r\n            menuItemElement.innerHTML = `\r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                    </div>\r\n            `;\r\n            this.parent.append(menuItemElement); //добавляем верстку внутрь родителя\r\n        }\r\n    }\r\n\r\n    getResource('http://localhost:3000/menu') //получаем данные с JSON-сервера про меню\r\n    .then(data => {\r\n        data.forEach(({img, altimg, title, descr, price}) => { //деструктурируем объекты из массива menu db.json\r\n            new MenuItem( //передаем классу в качестве аргументов ключи объектов menu db.json\r\n                img, \r\n                altimg, \r\n                title, \r\n                descr, \r\n                price, \r\n                \".menu__field > .container\"\r\n            ).render(); //метод класса для верстки\r\n        }); //можно также создавать верстку не через класс, а через обычные команды, которые мы прописали в render()\r\n    });\r\n\r\n    /* axios.get('http://localhost:3000/menu') //get-запрос при помощи библиотеки axios\r\n    .then(data => {\r\n        data.data.forEach(({img, altimg, title, descr, price}) => {\r\n            new MenuItem(\r\n                img, \r\n                altimg, \r\n                title, \r\n                descr, \r\n                price, \r\n                \".menu__field > .container\"\r\n            ).render();\r\n        });\r\n    }); */\r\n}\r\n\r\nexport default cards;","import {showStatusModal} from './modal.js';\r\nimport {postData} from '../services/services.js';\r\n\r\nfunction forms(formSelector, modalSelector, modalTimer) {\r\n    //variables\r\n    const forms = document.querySelectorAll(formSelector);\r\n    \r\n    //Sending forms to server via Fetch API and showing status messages to user\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся.',\r\n        fail: 'Что-то пошло не так...'\r\n    };\r\n\r\n    forms.forEach(form => { //для каждой формы вызываем функцию bindPostData\r\n        bindPostData(form);\r\n    });\r\n    \r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault(); //убираем стандартное поведение браузера при отправке формы\r\n\r\n            //создаем блок для значка загрузки\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                padding-top: 10px;\r\n                margin: 0 auto;\r\n            `;\r\n            form.insertAdjacentElement('afterend', statusMessage); //выводим блок в конце формы\r\n\r\n            const formData = new FormData(form); //переформатируем данные формы в FormData\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries())); //formData переводим в формат JSON\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => { //действия при успешности запроса\r\n                console.log(data); //показываем полученный от сервера ответ для проверки\r\n                statusMessage.remove();\r\n                showStatusModal(modalSelector, message.success, modalTimer);\r\n            })\r\n            .catch(() => { //действия при неуспешности запроса\r\n                showStatusModal(modalSelector, message.fail, modalTimer);\r\n            })\r\n            .finally(() => { //действия при любом исходе запроса\r\n                form.reset(); //очистка формы на странице\r\n            });\r\n\r\n        });\r\n    }\r\n}\r\n\r\nexport default forms;","//Modal window open/close function\r\nfunction toggleModal(modalSelector, modalTimer) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.toggle('hide');\r\n    modal.classList.toggle('show');\r\n    if (modal.classList.contains('show')) {\r\n        document.body.style.overflow = 'hidden'; //unscroll window while modal is on\r\n    } else {\r\n        document.body.style.overflow = ''; //default value\r\n    }\r\n\r\n    if (modalTimer) {\r\n        clearInterval(modalTimer); //to stop setTimeout after first opening of modal\r\n    }\r\n    \r\n}\r\n\r\n\r\n// Shows modal with status messages\r\nfunction showStatusModal(modalSelector, message, modalTimer) {\r\n    const prevModalDialog = document.querySelector('.modal__dialog'),\r\n        modal = document.querySelector(modalSelector);\r\n    \r\n    prevModalDialog.classList.add('hide');\r\n\r\n    if (modal.classList.contains('hide')) {\r\n        //opens modal on the page to show status message (when form was filled directly on the page without modal) \r\n        toggleModal(modal, modalTimer);\r\n    }\r\n\r\n    const thanksModalDialog = document.createElement('div');\r\n    thanksModalDialog.classList.add('modal__dialog');\r\n    thanksModalDialog.innerHTML = `\r\n    <div class=\"modal__content\">\r\n        <div data-modal=\"close\" class=\"modal__close\">&times;</div>\r\n        <div class=\"modal__title\">${message}</div>\r\n    </div>\r\n    `;\r\n    modal.append(thanksModalDialog);\r\n\r\n    setTimeout( () => {\r\n        thanksModalDialog.remove();\r\n        prevModalDialog.classList.remove('hide');\r\n        prevModalDialog.classList.add('show');\r\n        if (modal.classList.contains('show')) {\r\n            //closes modal if user hasn't clicked x-button himself\r\n            toggleModal(modalSelector);\r\n        }\r\n    }, 4000); //returns previous modal after 4s\r\n}\r\n\r\n\r\n// General modal function\r\nfunction modal(modalSelector, modalButtonSelector, modalTimer) {\r\n    //variables\r\n    const openModalButtons = document.querySelectorAll(modalButtonSelector),\r\n        modal = document.querySelector(modalSelector);\r\n\r\n    openModalButtons.forEach(btn => {\r\n        btn.addEventListener('click', () => toggleModal(modalSelector, modalTimer));\r\n    });\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-modal') == 'close') { \r\n            //clicking on a background of modal or x-button to close modal\r\n            toggleModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains('show')) { //pressing Esc when modal is open\r\n            toggleModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    const openModalByScroll = () => { //opens modal when page is scrolled to its bottom\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 1) {\r\n            toggleModal(modalSelector, modalTimer);\r\n            window.removeEventListener('scroll', openModalByScroll); //not to open every time at the bottom\r\n        }\r\n    };\r\n\r\n    window.addEventListener('scroll', openModalByScroll);\r\n}\r\n\r\n\r\nexport default modal;\r\nexport {toggleModal, showStatusModal};","function slider({container, slide, prevArrow, nextArrow, current, total, wrapper, field, indicators}) {\r\n    //Slider with navigation dots\r\n    //elements\r\n    let slideIndex = 1;\r\n    let slideOffset = 0;\r\n    const slides = document.querySelectorAll(slide),\r\n    slider = document.querySelector(container),\r\n    prevSlideBtn = document.querySelector(prevArrow),\r\n    nextSlideBtn = document.querySelector(nextArrow),\r\n    currentSlideIndex = document.querySelector(current),\r\n    totalSlidesNumber = document.querySelector(total),\r\n    slidesField = document.querySelector(field),\r\n    slidesWrapper = document.querySelector(wrapper),\r\n    widthForSlider = window.getComputedStyle(slidesWrapper).width;\r\n\r\n\r\n    function deleteNonDigits(str) { //удаляет всё, кроме цифр, в строке\r\n        return +str.replace(/\\D/g, \"\");\r\n    }\r\n    \r\n    const width = deleteNonDigits(widthForSlider); //ширина в цифрах из CSS (без приписки px)\r\n\r\n    function changeTotalSlidesNumberIndicator(totalIndicator) {\r\n        if (slides.length < 10) {\r\n            totalIndicator.textContent = `0${slides.length}`;\r\n        } else {\r\n            totalIndicator.textContent = slides.length;\r\n        }\r\n    }\r\n\r\n    function changeCurrentSlideNumberIndicator(currentIndicator) {\r\n        if (slides.length < 10) {\r\n            currentIndicator.textContent = `0${slideIndex}`;\r\n        } else {\r\n            currentIndicator.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    changeTotalSlidesNumberIndicator(totalSlidesNumber);\r\n    changeCurrentSlideNumberIndicator(currentSlideIndex);\r\n\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.transition = '0.5s all';\r\n    slidesWrapper.style.overflow = 'hidden';\r\n    slides.forEach(slide => {\r\n        slide.style.width = widthForSlider; //чтобы все картинки были одинаковой ширины\r\n    });\r\n\r\n    //for creating navigation dots\r\n    slider.style.position = 'relative';\r\n    const dots = [];\r\n\r\n    const sliderDots = document.createElement('ol');\r\n    sliderDots.classList.add(indicators);\r\n    slider.append(sliderDots);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.classList.add('dot');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        sliderDots.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    function lightenActiveDot() {\r\n        dots.forEach(dot => dot.style.opacity = '.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n    //end of creating nav dots\r\n\r\n    nextSlideBtn.addEventListener('click', () => {\r\n        if (slideOffset == width * (slides.length - 1)) {\r\n            slideOffset = 0;\r\n        } else {\r\n            slideOffset += width;\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${slideOffset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        changeCurrentSlideNumberIndicator(currentSlideIndex);\r\n\r\n        lightenActiveDot();\r\n    });\r\n\r\n    prevSlideBtn.addEventListener('click', () => {\r\n        if (slideOffset == 0) {\r\n            slideOffset = width * (slides.length - 1);\r\n        } else {\r\n            slideOffset -= width;\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${slideOffset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        changeCurrentSlideNumberIndicator(currentSlideIndex);\r\n\r\n        lightenActiveDot();\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            slideOffset = width * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${slideOffset}px)`;\r\n\r\n            changeCurrentSlideNumberIndicator(currentSlideIndex);\r\n\r\n            lightenActiveDot();\r\n        });\r\n    });\r\n    //end of slider\r\n\r\n    /* Slider - First option\r\n\r\n    showSlideByIndex(slideIndex);\r\n\r\n    if (slides.length < 10) {\r\n        totalSlidesNumber.textContent = `0${slides.length}`;\r\n    } else {\r\n        totalSlidesNumber.textContent = slides.length;\r\n    }\r\n\r\n    function showSlideByIndex(index) {\r\n\r\n        if (index > slides.length) {\r\n            slideIndex = 1; //если долистали до последнего слайда, снова включаем первый\r\n        }\r\n\r\n        if (index < 1) {\r\n            slideIndex = slides.length; //если листаем влево от первого слайда, то включаем последний\r\n        }\r\n\r\n        slides.forEach(slide => slide.classList.add('hide'));\r\n        slides[slideIndex - 1].classList.add('show');\r\n        slides[slideIndex - 1].classList.remove('hide');\r\n\r\n        if (slides.length < 10) { //приписываем нолик маленьким цифрам\r\n            currentSlideIndex.textContent = `0${slideIndex}`;\r\n        } else {\r\n            currentSlideIndex.textContent = `${slideIndex}`;\r\n        }\r\n    }\r\n\r\n    function changeSlideIndexByN(n) {\r\n        showSlideByIndex(slideIndex += n);\r\n    }\r\n\r\n    prevSlideBtn.addEventListener('click', () => {\r\n        changeSlideIndexByN(-1);\r\n    });\r\n\r\n    nextSlideBtn.addEventListener('click', () => {\r\n        changeSlideIndexByN(1);\r\n    }); */\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, tabActiveClass) {\r\n    //Tabs\r\n    // variables\r\n    const tabs = document.querySelectorAll(tabsSelector),\r\n        tabsContent = document.querySelectorAll(tabsContentSelector),\r\n        tabsParent = document.querySelector(tabsParentSelector);\r\n\r\n    //functions for tabs\r\n    const hideTabContent = () => {\r\n        tabsContent.forEach(tabContent => {\r\n            tabContent.classList.add('hide');\r\n            tabContent.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(tab => {\r\n            tab.classList.remove(tabActiveClass);\r\n        });\r\n    };\r\n\r\n    const showTabContent = (i = 0) => {\r\n        tabsContent[i].classList.remove('hide');\r\n        tabsContent[i].classList.add('show', 'fade'); //fade - CSS-animation\r\n        tabs[i].classList.add(tabActiveClass);\r\n    };\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    //tab switcher\r\n    tabsParent.addEventListener('click', (e) => {\r\n        let target = e.target; //to simplify the code\r\n\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((tab, i) => {\r\n                if (target == tab) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer(timerSelector, endDate) {\r\n    //Timer\r\n    //variables\r\n    const millisecondsInASecond = 1000,\r\n        millisecondsInADay = millisecondsInASecond * 60 * 60 * 24,\r\n        millisecondsInAnHour = millisecondsInASecond * 60 * 60,\r\n        millisecondsInAMinute = millisecondsInASecond * 60;\r\n        \r\n    //functions for timer\r\n    const getTimeRemaining = (endDate) => {\r\n        //gets time from now to the endtime\r\n        const t = Date.parse(endDate) - Date.parse(new Date()), //in ms\r\n            days = Math.floor(t / millisecondsInADay), //days in t\r\n            hours = Math.floor( (t / millisecondsInAnHour) % 24 ), \r\n            minutes = Math.floor( (t / millisecondsInAMinute) % 60),\r\n            seconds = Math.floor( (t / millisecondsInASecond) % 60);\r\n        \r\n        return {\r\n            'totalTimeRemaining': t,\r\n            'daysRemaining': days,\r\n            'hoursRemaining': hours,\r\n            'minutesRemaining': minutes,\r\n            'secondsRemaining': seconds\r\n        };\r\n    };\r\n\r\n    const putZero = (num) => {\r\n        //returns small numbers with zero in front\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    };\r\n\r\n    const setTimer = (timerSelector, endDate) => {\r\n        const timer = document.querySelector(timerSelector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector(\"#minutes\"),\r\n            seconds = timer.querySelector('#seconds'),\r\n            //updates timer each second\r\n            timeInterval = setInterval(updateTimer, 1000);\r\n\r\n        updateTimer();\r\n\r\n        function updateTimer() {\r\n            const t = getTimeRemaining(endDate);\r\n            //puts numbers to HTML\r\n            days.innerHTML = putZero(t.daysRemaining);\r\n            hours.innerHTML = putZero(t.hoursRemaining);\r\n            minutes.innerHTML = putZero(t.minutesRemaining);\r\n            seconds.innerHTML = putZero(t.secondsRemaining);\r\n\r\n            if(t.totalTimeRemaining <= 0) {\r\n                //stops updating timer when endtime comes\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    };\r\n\r\n    setTimer(timerSelector, endDate);\r\n\r\n}\r\n\r\nexport default timer;","const postData = async (url, data) => { //общая функция для настройки POST-запросов на сервер\r\n    const result = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        },\r\n        body: data\r\n    });\r\n\r\n    return await result.json(); //это Promise, который при успехе декодирует ответ от сервера в формат JS\r\n};\r\n\r\n\r\nconst getResource = async (url) => { //общая функция для настройки GET-запросов с сервера\r\n    const result = await fetch(url); //get-запрос\r\n\r\n    if(!result.ok) { //если запрос выдал ошибку 404 и т.п.\r\n        throw new Error(`Could not get resources from ${url}, status: ${result.status}`);\r\n    }\r\n\r\n    return await result.json(); //это Promise, который при успехе декодирует ответ от сервера в формат JS\r\n};\r\n\r\nexport {postData, getResource};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\r\n\r\n// importing modules\r\nimport tabs from './modules/tabs.js';\r\nimport calc from './modules/calc.js';\r\nimport cards from './modules/cards.js';\r\nimport forms from './modules/forms.js';\r\nimport modal from './modules/modal.js';\r\nimport {toggleModal} from './modules/modal.js';\r\nimport slider from './modules/slider.js';\r\nimport timer from './modules/timer.js';\r\n\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n    // Modal timer\r\n    const modalTimer = setTimeout(() => toggleModal('.modal'), 50000); //opens modal after 50s\r\n\r\n    // activating modules\r\n    modal('.modal', '[data-modal=\"open\"]', modalTimer);\r\n    tabs('.tabheader__item', '.tabcontent', '.tabheader__items', 'tabheader__item_active');\r\n    calc();\r\n    cards();\r\n    forms('form', '.modal', modalTimer);\r\n    slider({\r\n        container: '.offer__slider',\r\n        slide: '.offer__slide',\r\n        prevArrow: '.offer__slider-prev',\r\n        nextArrow: '.offer__slider-next',\r\n        current: '#current',\r\n        total: '#total',\r\n        field: '.offer__slider-innerwrapper',\r\n        wrapper: '.offer__slider-wrapper',\r\n        indicators: 'slider-indicators'\r\n    });\r\n    timer('.timer', '2021-12-31');\r\n});"],"sourceRoot":""}